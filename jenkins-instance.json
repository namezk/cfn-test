{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Installs Jenkins with nginx, jdk 1.8, and various jenkins plugins, CFN-Nag, and creates a Route53 subdomain",
    "Parameters"               : {
        "InstanceType" : {
            "Description" : "EC2 instance type for Jenkins Server",
            "Type"        : "String",
            "Default"     : "m3.medium",
            "AllowedValues" : [
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large"
            ],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "KeyName"      : {
            "Description" : "The EC2 Key Pair to allow SSH access to EC2 instances",
            "Type"        : "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
        },
        "VpcId"        : {
            "Description" : "The VPC Id where the EC2 instances will be launched.",
            "Type"        : "AWS::EC2::VPC::Id",
            "ConstraintDescription" : "must be the name of an existing VPC."
        },
        "YourIPRange"  : {
            "Description" : "CIDR block of the network from where you will connect to the Jenkins server using HTTP and SSH",
            "Type"        : "String",
            "MinLength"   : "9",
            "MaxLength"   : "18",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0"
        },
        "VPCSubnet"    : {
            "Description" : "Select a subnet id for the Jenkins Server - this subnet must exist in the selected VPC",
            "Type"        : "AWS::EC2::Subnet::Id"
        },
        "DnsZone": {
            "Description": "Route53-hosted zone to use for the DNS record (<prefix>.<zone>)",
              "Type": "String",
              "Default": "khalidnamez.com."
            },
        "DnsPrefix" : {
      "Description" : "Prefix for Jenkins' DNS record (<prefix>.<zone>)",
      "Type": "String",
      "Default": "jenkins"
    }
    },
    "Mappings"                 : {
        "AWSInstanceType2Arch" : {
            "t1.micro" : {
                "Arch" : "PV64"
            },
            "t2.micro" : {
                "Arch" : "HVM64"
            },
            "t2.small" : {
                "Arch" : "HVM64"
            },
            "t2.medium" : {
                "Arch" : "HVM64"
            },
            "m3.medium" : {
                "Arch" : "HVM64"
            },
            "m3.large"  : {
                "Arch" : "HVM64"
            },
            "m3.xlarge" : {
                "Arch" : "HVM64"
            },
            "m3.2xlarge" : {
                "Arch" : "HVM64"
            },
            "c3.large"   : {
                "Arch" : "HVM64"
            },
            "c3.xlarge"  : {
                "Arch" : "HVM64"
            },
            "c3.2xlarge" : {
                "Arch" : "HVM64"
            },
            "c3.4xlarge" : {
                "Arch" : "HVM64"
            },
            "c3.8xlarge" : {
                "Arch" : "HVM64"
            },
            "c4.large"   : {
                "Arch" : "HVM64"
            },
            "c4.xlarge"  : {
                "Arch" : "HVM64"
            },
            "c4.2xlarge" : {
                "Arch" : "HVM64"
            },
            "c4.4xlarge" : {
                "Arch" : "HVM64"
            },
            "c4.8xlarge" : {
                "Arch" : "HVM64"
            },
            "r3.large"   : {
                "Arch" : "HVM64"
            },
            "r3.xlarge"  : {
                "Arch" : "HVM64"
            },
            "r3.2xlarge" : {
                "Arch" : "HVM64"
            },
            "r3.4xlarge" : {
                "Arch" : "HVM64"
            },
            "r3.8xlarge" : {
                "Arch" : "HVM64"
            },
            "i2.xlarge"  : {
                "Arch" : "HVM64"
            },
            "i2.2xlarge" : {
                "Arch" : "HVM64"
            },
            "i2.4xlarge" : {
                "Arch" : "HVM64"
            },
            "i2.8xlarge" : {
                "Arch" : "HVM64"
            },
            "hi1.4xlarge" : {
                "Arch" : "HVM64"
            },
            "hs1.8xlarge" : {
                "Arch" : "HVM64"
            },
            "cr1.8xlarge" : {
                "Arch" : "HVM64"
            },
            "cc2.8xlarge" : {
                "Arch" : "HVM64"
            }
        },
        "AWSRegionArch2AMI"    : {
            "us-east-1" : {
                "PV64" : "ami-1ccae774",
                "HVM64" : "ami-1ecae776"
            },
            "us-west-2" : {
                "PV64" : "ami-ff527ecf",
                "HVM64" : "ami-e7527ed7"
            },
            "us-west-1" : {
                "PV64" : "ami-d514f291",
                "HVM64" : "ami-d114f295"
            },
            "eu-west-1" : {
                "PV64" : "ami-bf0897c8",
                "HVM64" : "ami-a10897d6"
            },
            "eu-central-1" : {
                "PV64" : "ami-ac221fb1",
                "HVM64" : "ami-a8221fb5"
            },
            "ap-northeast-1" : {
                "PV64" : "ami-acd9e8fe",
                "HVM64" : "ami-68d8e93a"
            },
            "ap-southeast-1" : {
                "PV64" : "ami-27f90e27",
                "HVM64" : "ami-cbf90ecb"
            },
            "ap-southeast-2" : {
                "PV64" : "ami-ff9cecc5",
                "HVM64" : "ami-fd9cecc7"
            },
            "sa-east-1"      : {
                "PV64" : "ami-fd9925e0",
                "HVM64" : "ami-b52890a8"
            },
            "eu-west-2": {
                "HVM64": "ami-1a7f6d7e"
            }
        }
    },
    "Resources"                : {
        "JenkinsServer" : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "Comment" : "Install Jenkins, nginx and the Jenkins CodeDeploy/CodePipeline plugin",
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "install_all" : [
                            "install_base",
                            "install_nginx"
                        ]
                    },
                    "install_base" : {
                        "packages" : {
                            "yum" : {
                                "git" : [
                                ]
                            }
                        }
                    },
                    "install_nginx" : {
                        "packages" : {
                            "yum" : {
                                "nginx" : [
                                ]
                            }
                        },
                        "files"    : {
                            "/etc/nginx/nginx.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "user  nginx;\n",
                                            "worker_processes  1;\n\n",
                                            "error_log  /var/log/nginx/error.log;\n",
                                            "pid        /var/run/nginx.pid;\n\n",
                                            "events {\n",
                                            "    worker_connections  1024;\n",
                                            "}\n\n",
                                            "http {\n",
                                            "    include       /etc/nginx/mime.types;\n",
                                            "    default_type  application/octet-stream;\n",
                                            "    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n",
                                            "                      '$status $body_bytes_sent \"$http_referer\" '\n",
                                            "                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n",
                                            "    access_log  /var/log/nginx/access.log  main;\n",
                                            "    sendfile        on;\n",
                                            "    keepalive_timeout  65;\n",
                                            "    include /etc/nginx/conf.d/*.conf;\n",
                                            "    index   index.html index.htm;\n",
                                            "    server {\n",
                                            "        listen       80;\n",
                                            "        server_name  _;\n",
                                            "        location / {\n",
                                            "          proxy_pass              http://127.0.0.1:8080;\n",
                                            "          proxy_set_header        Host $host;\n",
                                            "          proxy_set_header        X-Real-IP $remote_addr;\n",
                                            "          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n",
                                            "          proxy_connect_timeout   150;\n",
                                            "          proxy_send_timeout      100;\n",
                                            "          proxy_read_timeout      100;\n",
                                            "          proxy_buffers           4 32k;\n",
                                            "          client_max_body_size    8m;\n",
                                            "          client_body_buffer_size 128k;\n",
                                            "        }\n",
                                            "   }\n",
                                            "}\n"
                                        ]
                                    ]
                                },
                                "mode"    : "000444",
                                "owner"   : "root",
                                "group"   : "root"
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "nginx" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files"         : [
                                        "/etc/nginx/nginx.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "KeyName" : {
                    "Ref" : "KeyName"
                },
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "NetworkInterfaces" : [
                    {
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "GroupSet"                 : [
                            {
                                "Ref" : "JenkinsSecurityGroup"
                            }
                        ],
                        "SubnetId"                 : {
                            "Ref" : "VPCSubnet"
                        }
                    }
                ],
                "InstanceType"      : {
                    "Ref" : "InstanceType"
                },
                "IamInstanceProfile" : {
                    "Ref" : "JenkinsInstanceProfile"
                },
                "UserData"           : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-init -v ",
                                " --stack ",
                                {
                                    "Ref" : "AWS::StackName"
                                },
                                " --resource JenkinsServer ",
                                " --configsets install_all ",
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "\n",
                                "yum update -y\n",
                                "yum upgrade -y\n",
                                "yum install -y ruby24\n",
                                "yum remove -y ruby20\n",
                                "gem install cfn-nag\n",
                                "# Install Java then Jenkins\n",
				                "yum install -y java-1.8.0\n",
                                "/usr/sbin/alternatives --set java /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java || true\n",
                                "/usr/sbin/alternatives --set javac /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/javac || true\n",
                                "yum remove -y java-1.7.0\n",				
                                "wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo\n",
                                "rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key\n",
                                "yum install -y jenkins\n",
                                "service jenkins start\n",
                                "chkconfig jenkins on\n",
                                "# Update the AWS CLI to the latest version\n",
                                "yum update -y aws-cli\n",
                                "# Wait 30 seconds to allow Jenkins to startup\n",
                                "echo \"Waiting 30 seconds for Jenkins to start.....\"\n",
                                "sleep 30\n",
								"gem install rake\n",
								"gem install haml\n",
								"gem install minitest\n",
                                "# Install the required plugins\n",
                                "cd /var/lib/jenkins/plugins\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/multiple-scms.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/github-api.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/scm-api.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/git-client.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/github.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/git.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/codedeploy.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/aws-codepipeline.hpi\n",
								"curl -O -L https://updates.jenkins-ci.org/latest/rake.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/plain-credentials.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/aws-credentials.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/aws-java-sdk.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/jenkins-cloudformation-plugin.hpi\n",
                                "chown jenkins:jenkins *.hpi\n",
                                "# Restarting Jenkins\n",
                                "service jenkins restart\n",
                                "reboot"
                            ]
                        ]
                    }
                },
                "Tags"               : [
                    {
                        "Key" : "Name",
                        "Value" : "Jenkins Server"
                    }
                ]
            }
        },
        "JenkinsSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable SSH and HTTP access from specific CIDR block",
                "VpcId"            : {
                    "Ref" : "VpcId"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : {
                            "Ref" : "YourIPRange"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : {
                            "Ref" : "YourIPRange"
                        }
                    }
                ]
            }
        },
        "JenkinsRole"          : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "Path" : "/",
                "ManagedPolicyArns" : [
                    "arn:aws:iam::aws:policy/AWSCodePipelineCustomActionAccess"
                ],
                "AssumeRolePolicyDocument" : {
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action"    : [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "JenkinsInstanceProfile" : {
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" : {
                "Path" : "/",
                "Roles" : [
                    {
                        "Ref" : "JenkinsRole"
                    }
                ]
            }
        },
        "DnsRecord" : {
          "Type" : "AWS::Route53::RecordSet",
          "Properties" : {
             "HostedZoneName" : { "Ref": "DnsZone" },
             "Comment" : "DNS record for Jenkins instance",
            "Name" : { "Fn::Join" : [ "", [{"Ref" : "DnsPrefix"}, ".", {"Ref" : "DnsZone"}]]},
             "Type" : "A",
             "TTL" : "60",
             "ResourceRecords" : [
                { "Fn::GetAtt" : [ "JenkinsServer", "PublicIp" ] }
             ]
            }
        }
    },  
    "Outputs": {
     "DnsAddress": {
      "Description": "Jenkins URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Ref": "DnsRecord"
            }
          ]
        ]
      }
    }
  }
}